name: Validate Documentation

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - '_documentation/**/*.md'
      - '.github/workflows/validate-docs.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - '_documentation/**/*.md'
      - '.github/workflows/validate-docs.yml'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Run documentation validation
      run: |
        python _documentation/tools/validate_docs.py --json > validation-results.json
        
    - name: Upload validation results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-results
        path: validation-results.json
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const results = JSON.parse(fs.readFileSync('validation-results.json', 'utf8'));
          
          let comment = '## 📋 Documentation Validation Results\n\n';
          
          if (results.summary.errors > 0) {
            comment += `### ❌ Errors (${results.summary.errors})\n\n`;
            results.errors.forEach(error => {
              const line = error.line ? `:${error.line}` : '';
              comment += `- \`${error.file}${line}\`: ${error.message}\n`;
            });
            comment += '\n';
          }
          
          if (results.summary.warnings > 0) {
            comment += `### ⚠️ Warnings (${results.summary.warnings})\n\n`;
            results.warnings.forEach(warning => {
              const line = warning.line ? `:${warning.line}` : '';
              comment += `- \`${warning.file}${line}\`: ${warning.message}\n`;
            });
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Check for markdown link errors
      if: always()
      run: |
        npx markdown-link-check _documentation/**/*.md --config .github/markdown-link-check.json || true
        
  spell-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run spell check
      uses: streetsidesoftware/cspell-action@v7
      with:
        files: '_documentation/**/*.md'
        config: '.github/cspell.json'